plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services' version '4.4.2' 
}
dependencies {

  // Import the Firebase BoM

  implementation platform('com.google.firebase:firebase-bom:33.4.0')


  // TODO: Add the dependencies for Firebase products you want to use

  // When using the BoM, don't specify versions in Firebase dependencies

  implementation 'com.google.firebase:firebase-analytics'


  // Add the dependencies for any other desired Firebase products
  //implementation 'com.google.firebase:firebase-firestore'
  //implementation 'com.google.firebase:firebase-auth'


  // https://firebase.google.com/docs/android/setup#available-libraries

}


android {
    namespace = "com.example.app"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "com.example.app"
        // You can update the following values to match your application needs.
        // For more information, see: https://flutter.dev/to/review-gradle-config.
        minSdk 23
        targetSdk 33
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }
    signingConfigs {
        release {
            storeFile file('/home/stephan/.android/debug.keystore')
            storePassword 'android'
            keyAlias 'AndroidDebugKey'
            keyPassword 'android'
        }
    }

    buildTypes {
       release {
        signingConfig signingConfigs.release
    }
    debug {
        signingConfig signingConfigs.debug
    }
    }
}

flutter {
    source = "../.."
}
